<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=title%></title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@4.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
</head>
<body>
    <div id="app">
			<v-app id="inspire">
				<v-navigation-drawer
					v-model="drawer"
					mobile-break-point="960"
					app
					width="240"
					dark
				>
					<v-divider class="mb-2"></v-divider>
					<v-list expand nav>
						<template v-for="item in items">
							<v-list-group
              	v-if="item.children"
								:key="item.text"
								v-model="item.model"
								:prepend-icon="item.model ? item.icon : item['icon-alt']"
								append-icon=""
							>
								<template v-slot:activator>
									<v-list-item-content>
										<v-list-item-title>
											{{ item.text }}
										</v-list-item-title>
									</v-list-item-content>
								</template>
								<v-list-item
									v-for="(child, i) in item.children"
									:key="i"
									link
									v-model="child.model"
									@click="link(child.to)"
								>
									<v-list-item-action v-if="child.icon">
										<v-icon>{{ child.icon }}</v-icon>
									</v-list-item-action>
									<v-list-item-content>
										<v-list-item-title>
											{{ child.text }}
										</v-list-item-title>
									</v-list-item-content>
								</v-list-item>
							</v-list-group>
							<v-list-item
								v-else
								:key="item.text"
								link
								v-model="item.model"
								@click="link(item.to)"
							>
								<v-list-item-action>
									<v-icon>{{ item.icon }}</v-icon>
								</v-list-item-action>
								<v-list-item-content>
									<v-list-item-title>
										{{ item.text }}
									</v-list-item-title>
								</v-list-item-content>
							</v-list-item>
						</template>
					</v-list>
				</v-navigation-drawer>
				<v-app-bar
					absolute
					app
					color="transparent"
					flat
					height="70"
					style="width: auto;"
				>
					<v-btn
						fab
						small
						@click="drawer = !drawer"
					>
						<v-icon v-if="!drawer">
						mdi-chevron-right
						</v-icon>

						<v-icon v-else>
						mdi-chevron-left
						</v-icon>
					</v-btn>
					<div class="mx-3"></div>
					<v-toolbar-title><%=title%></v-toolbar-title>
				</v-app-bar>
				<v-main>
					<v-container fluid>
						<%- include(page) %>
					</v-container>
				</v-main>
			</v-app>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        new Vue({
          el: '#app',
          vuetify: new Vuetify(),
          data: {
            drawer: null,
            items: [],
						x: '/home'
          },
					methods: {
						menu() {
							this.items = [
            		{ icon: 'mdi-home', text: 'Home', model: (this.x==='/home')? true : false, to: "/home" },
								{
									icon: 'mdi-chevron-up',
									'icon-alt': 'mdi-chevron-down',
									text: 'Master',
									model: (this.x==='/tasks')? true : false,
									children: [
										{ icon: 'mdi-format-list-bulleted', text: 'Task', model: (this.x==='/tasks')? true : false, to: "/tasks" }
									],
								},
								{
									icon: 'mdi-chevron-up',
									'icon-alt': 'mdi-chevron-down',
									text: 'Setting',
									model: (this.x==='/users')? true : false,
									children: [
										{ icon: 'mdi-account', text: 'Users', model: (this.x==='/users')? true : false, to: "/users" }
									],
								}
							]
						},
						link(l) {
							this.x = l;
							location.replace(l);
						}
					},
          mounted() {
            this.x = location.pathname;
            this.menu();
					},
					created() {
						this.$vuetify.theme.dark = true;
					},
					beforeDestroy() {
						this.$vuetify.theme.dark = false;
					}
        })
    </script>
</body>
</html>